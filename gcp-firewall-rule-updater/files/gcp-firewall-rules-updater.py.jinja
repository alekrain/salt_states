#!/usr/bin/env python
# ======================================================================
# Python Source File
#
# NAME: gcp_fw_rule_updater.py
# AUTHOR:  Alek Tant
# DATE  : 2019.04.06
#
# PURPOSE: Update a GCP firewall rule based on IP from DNS.

import logging
from logging.handlers import WatchedFileHandler
import re
from sys import exit
from socket import gethostbyname
from time import sleep
from googleapiclient.discovery import build


log = logging.basicConfig(filename='/var/log/gcp_fw_rule_updater.log',
                          format='%(asctime)s [%(name)s][%(levelname)s][%(process)d] %(message)s',
                          level=logging.INFO,
                          handlers=WatchedFileHandler)
log = logging.getLogger(__name__)


def get_domain_ip(domain_name):
    current_ip = gethostbyname(domain_name)
    if re.search(r'^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$', current_ip):
        return current_ip
    else:
        log.critical('Could not find current IP for {0}: {1}'.format(domain_name, current_ip))
        exit()


def get_rule_ip(project, rule):
    # Using Application Default Credentials. This requires running from an instance inside GCP that has the proper
    # role permissions
    compute = build('compute', 'v1')
    rule_request = compute.firewalls().get(project=project, firewall=rule)
    rule_data = rule_request.execute()
    source_ranges = rule_data['sourceRanges']
    log.info('Rule Source Ranges: {0}'.format(source_ranges))
    return source_ranges


def update_fw_rule(project, rule, ip):
    body = {'sourceRanges': [ip]}
    compute = build('compute', 'v1')
    rule_request = compute.firewalls().patch(project=project, firewall=rule, body=body)
    rule_data = rule_request.execute()


if __name__ == '__main__':
    rule = 'salt'
    domain_name = 'vpn.smartaleksolutions.com'

    while True:
        project = '{{ project }}'
        current_rule_sources = get_rule_ip('{{ rule }}')
        domain_ip = get_domain_ip('{{ domain }}')
        if domain_ip not in current_rule_sources:
            update_fw_rule('salt', domain_ip)
        else:
            log.info('Found IP {0} already in the firewall rule. Making no changes.'.format(domain_ip))
        sleep(600)
