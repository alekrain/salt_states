#!/usr/bin/env python
# ======================================================================
# Python Source File
#
# NAME: ddupdater.py
# AUTHOR:  Alek Tant
# DATE  : 2019.04.06
#
# PURPOSE: Update Dynamic DNS in Google Domains

import logging
import requests
import requests.exceptions
import re
from sys import exit
from socket import gethostbyname
from time import sleep

log = logging.basicConfig(filename='/var/log/ddupdater.log',
                          level=logging.DEBUG,
                          handlers=WatchedFileHandler)
log = logging.getLogger()

username = '{{ ddupdater.username }}'
password = '{{ ddupdater.password }}'
domain_name = '{{ ddupdater.domain_name }}'


def get_ip():
    try:
        r = requests.get('https://domains.google.com/checkip')
    except Exception as e:
        log.critical('Could not get public IP: {0}'.format(e))
        exit()

    if re.search(r'\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}', r.text):
        return r.text
    else:
        log.critical('Did not return a valid IP address: '.format(r.text))
        exit()


def get_current_ip(domain_name):
    current_ip = gethostbyname(domain_name)
    if re.search(r'^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$', current_ip):
        return current_ip
    else:
        log.critical('Could not find current IP for {0}: {1}'.format(domain_name, current_ip))
        exit()


def update_dns(username, password, domain_name, ip):
    url = 'https://{0}:{1}@domains.google.com/nic/update?hostname={2}&myip={3}'.format(username, password, domain_name, ip)
    headers = {
        'User-Agent': 'Python Requests',
        'Authorization': 'Basic base64 - encoded - auth - string',
    }

    log.info('Sending URL: {}'.format(url))
    log.debug('With Headers: {}'.format(headers))
    try:
        r = requests.post(url, headers=headers)
    except Exception as e:
        log.critical('Exception occurred: {}'.format(e))
        exit()

    if r.text.startswith('good'):
        log.info('Successfully updated {0} to {1}'.format(domain_name, ip))
    elif r.text.startswith('nochg'):
        log.info('No update necessary. {0} already set to {1}'.format(domain_name, ip))
    elif r.text.startswith('nohost'):
        log.critical('{0} does not exist in Google Domains'.format(domain_name))
    elif r.text.startswith('badauth'):
        log.critical('Username/Password not valid for domain name {0}'.format(domain_name))
    elif r.text.startswith('notfqdn'):
        log.critical('{0} is not a FQDN'.format(domain_name))
    elif r.text.startswith('badagent'):
        log.critical('User-Agent for update request does not appear to be valid: {0}'.format(headers['User-Agent']))
    elif r.text.startswith('abuse'):
        log.critical('Access to domain name {0} has been blocked'.format(domain_name))
    elif r.text.startswith('911'):
        log.critical('An error occurred on the Google Domains side. Please wait a few minutes and try again.')


if __name__ == '__main__':
    while True:
        ip = get_ip()
        current_ip = get_current_ip(domain_name)
        if ip != current_ip:
            log.info('DNS IP is not the same as the current IP. Updating...')
            update_dns(username, password, domain_name, ip)
        else:
            log.info('DNS IP and current IP are the same.')
        sleep(600)
